// BHM Engineering Academy
// https://cortex-m.com/lessons/
// Embedded Systems Bare-Metal Programming Ground Upâ„¢ (STM32)

#include "stm32f4xx.h"

#define SYSTICK_LOAD_VAL			16000
#define	CTRL_ENABLE					(1U<<0)
#define CTRL_CLKSRC					(1U<<2)
#define CTRL_COUNTFLAG				(1U<<16)
#define CTRL_TICKINT				(1U<<1)

// ------ SYS TICK
void systickDelayMs(int delay)
{
	// ------ Configure the SysTick.

	// Reload with number of clocks per millisecond.
	SysTick->LOAD = SYSTICK_LOAD_VAL;

	// Clear SysTick current value register.
	SysTick->VAL = 0;

	// Enable SysTick and select internal clock source.
	SysTick->CTRL = CTRL_ENABLE | CTRL_CLKSRC;

	for (int i = 0; i < delay; ++i)
	{
		// Wait before the count flag has been set.
		while ((SysTick->CTRL & CTRL_COUNTFLAG) == 0) {}
	}
	SysTick->CTRL = 0;
}

void systick_1hz_interrupt(void)
{
	// Reload with number of clocks per millisecond.
	SysTick->LOAD  = 16000000 - 1;

	// Clear SysTick current value register.
	SysTick->VAL = 0;

	// Enable SysTick and select internal clock source.
	SysTick->CTRL = CTRL_ENABLE | CTRL_CLKSRC ;

	/*Enable systick interrupt*/
	SysTick->CTRL  |= CTRL_TICKINT;
}

