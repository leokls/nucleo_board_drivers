#include <stdint.h>
#include <stdio.h>

// ------- --------- --------- --------- --------- --------- --------- --------
#define __IO volatile

#define BLOCK2_PERIPH_BASE		(0x40000000UL)

#define AHB1_PERIPHERAL_OFFSET  (0x00020000UL)
#define AHB1_PERIPHERAL_BASE	(BLOCK2_PERIPH_BASE + AHB1_PERIPHERAL_OFFSET)

#define RCC_OFFSET				(0x3800UL)
#define RCC_BASE				(AHB1_PERIPHERAL_BASE + RCC_OFFSET)

#define GPIOA_OFFSET			(0x0000UL)
#define GPIOA_BASE				(AHB1_PERIPHERAL_BASE + GPIOA_OFFSET)
#define GPIOAEN_BIT				(1U << 0)	   // GPIOx enable bit

#define BIT_4                   (1U << 4)
#define BIT_5					(1U << 5)
#define BIT_6					(1U << 6)
#define BIT_7					(1U << 7)
#define BIT_8					(1U << 8)
#define BIT_9					(1U << 9)
#define BIT_10					(1U << 10)
#define BIT_11					(1U << 11)
#define BIT_12					(1U << 12)
#define BIT_13					(1U << 13)
#define BIT_14					(1U << 14)
#define BIT_15					(1U << 15)

#define LD2						BIT_5         // MCU's user led



// ------- --------- --------- --------- --------- --------- --------- --------
char keyboardReads;
char targetKey = '1';
int main(void)
{
	// 1. Enable the RCC clock access to the user LED.
	RCC->AHB1ENR |= GPIOAEN_BIT;

	// 2. Set the user LED as output pin.
	// MODER5[1:0] at bits 10 and 11
	GPIOA->MODER |= BIT_10;
	GPIOA->MODER &= ~BIT_11;

	uart2_rxtx_init();

	while (1)
	{
		keyboardReads = uart2_read();

		if (keyboardReads == targetKey)
		{
			// Turn the user LED on.
			GPIOA->ODR |= LD2;
		}
		else
		{
			// Turn the user LED off.
			GPIOA->ODR &= ~LD2;
		}
	}
}
